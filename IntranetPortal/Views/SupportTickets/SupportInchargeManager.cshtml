@{
    Layout = "~/Views/Shared/_StaffMaster.cshtml";
    ViewData["Title"] = "Home Page";
}
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
<script type="text/javascript">
    //<![CDATA[
    function onInitNewRow(e, ActivityId) {

        e.data.Activity.ActivityId = ActivityId;

    }
    //]]>
</script>
<div class="page-header card">
    <div class="row align-items-end">
        <div class="col-lg-8">
            <div class="page-header-title">
                <i class="feather icon-home bg-c-blue"></i>
                <div class="d-inline">
                    <h5>Welcome  @User.Identity.Name</h5>
                
                </div>
            </div>
        </div>

    </div>
</div>

<div class="pcoded-inner-content">
    <div class="main-body">
        <div class="page-wrapper">
            <div class="page-body">

                <div class="row">

                    
                   
                        <div class="col-xl-12 col-md-12">
                            <div class="card latest-update-card">
                                <div class="card-header">
                                    <h5>Manage Support Incharge</h5>
                                    <div class="card-header-right">
                                        <ul class="list-unstyled card-option" style="width:100px;">
                                            <li class="first-opt"><i class="feather icon-chevron-left open-card-option"></i></li>
                                            <li><i class="feather icon-edit full-card"></i> <a href="/StaffPage/Dashboard">Go back</a></li>
                                          
                                        </ul>
                                    </div>
                                </div>

                                <div class="card-block">

                                @(
                                Html.DevExtreme().DataGrid<IntranetPortal.Models.SupportIncharge>
                                            ()
                                            .DataSource(ds => ds.Mvc()
                                            .Controller("SupportTicketAPI")
                                        .InsertAction("AddNewIncharge")
                                            .LoadAction("GetListofIncharge")
                                        .UpdateAction("UpdateIncharge")

                                            .Key("SupportInchargeID")


                                            )
                                            .RemoteOperations(true)
                                            .Columns(columns =>
                                            {



                                                columns.AddFor(m => m.InchargeName).SortOrder(SortOrder.Desc).Caption("Staff Name").Lookup(r => r
                                           .DataSource(ds => ds.Mvc().Controller("ActivitiesAPI").LoadAction("GetICTOfficers").Key("PFNumber"))
                                           .ValueExpr("Email")
                                           .DisplayExpr("Email"))
                                               .ValidationRules(r => r
                                               .AddRequired()
                                               .Message("Staff Name is required"));


                                                columns.AddFor(m => m.AssignedDate).DataType(GridColumnDataType.Date).Format("dd-MM-yyyy"); 
                                                columns.AddFor(m => m.AssignedBy);
                                            columns.AddFor(m => m.UpdatedBy);

                                                columns.AddFor(m => m.Status)
                                            .CellTemplate(
                                @<text>
                                                <% if(data.Status ==true)
                                    {%>
                                                <div class="feather icon-corner-up-right  text-success"> In-charge</div>
                                                <% }
                                    if(data.Status== false )
                                    {%>
                                                <div class="feather icon-corner-down-right  text-danger">Removed </div>
                                                <% }
                                    %>
                                            </text>);
                                        


                                               
                                              

                                            })

                                        .SearchPanel(f => f.Visible(true))

                                        .Paging(p => p.PageSize(10))
                                        .HeaderFilter(f => f.Visible(true))

                                        .Grouping(g => g.ContextMenuEnabled(true))
                                        .Grouping(g => g.AutoExpandAll(true))
                                        .RemoteOperations(true)
                                        .Selection(s => s.Mode(SelectionMode.Multiple))
                                        .Export(e => e.Enabled(true).FileName("ListofGroups").AllowExportSelectedData(true))
                                        .Editing(e => e
                                        .AllowAdding(true)
                                        .Popup(p => p
                                        .Title("Add Ticket")
                                        .ShowTitle(true)
                                        .Width(1000)
                                        .Height(300)



                                        )

                                        .AllowUpdating(true)
                                        .AllowDeleting(false)
                                        .Mode(GridEditMode.Popup)
                                        .UseIcons(true)
                                        .Form(f => f
                                        .ID("TicketID")
                                        .ColCount(1)
                                        .Items(items =>
                                        {
                                            items.AddGroup()
                                            .ColCount(2)
                                            .Items(groupItems =>
                                            {

                                                groupItems.AddSimpleFor(m => m.InchargeName);

                                            groupItems.AddSimpleFor(m => m.Status);



                                            });
                                            
                                        })

                                        )
                                        )
                                        )



                                </div>


                            </div>
                        </div>
                   
                </div>
            </div>
        </div>

    </div>
</div>

<script>

    function getSubServices(options) {
        return {
            store: DevExpress.data.AspNet.createStore({
                key: "ServiceSubCategoryName",
                loadUrl: '@Url.Action("GetSubServices", "SupportTicketAPI", new { httproute = true })'
            }),
            filter: options.data ? ["ServiceCategoryCode", "=", options.data.ServiceCategoryCode] : null
        };
    }
    function setServiceID(rowData, value) {

        rowData.ServiceCategoryCode = value;
        rowData.ServiceSubCategoryName = null;
    }



</script>

