@{
    Layout = "~/Views/Shared/_StaffMaster.cshtml";
    ViewData["Title"] = "Home Page";
}



<div class="page-header card">
<div class="row align-items-end">
<div class="col-lg-8">
<div class="page-header-title">
<i class="feather icon-home bg-c-blue"></i>
<div class="d-inline">
<h5>System Setup</h5>

</div>
</div>
</div>

</div>
</div>

<div class="pcoded-inner-content">
<div class="main-body">
<div class="page-wrapper">
<div class="page-body">

<div class="row">







<div class="col-xl-12 col-md-6">
<div class="card table-card">
<div class="card-header">
<h5>Manage Permissions</h5>
<div class="card-header-right">
<ul class="list-unstyled card-option">
<li class="first-opt"><i class="feather icon-chevron-left open-card-option"></i></li>
<li><i class="feather icon-maximize full-card"></i></li>
<li><i class="feather icon-minus minimize-card"></i></li>
<li><i class="feather icon-refresh-cw reload-card"></i></li>
<li><i class="feather icon-trash close-card"></i></li>
<li><i class="feather icon-chevron-left open-card-option"></i></li>
</ul>
</div>
</div>
<div class="card-block">

                                @(Html.DevExtreme().DataGrid<IntranetPortal.Models.Permission>
                                                ()
                                                .DataSource(ds => ds.Mvc()
                                                .Controller("SetupAPI")
                                                 .InsertAction("AddNewPermisson")
                                                .LoadAction("GetPermissions")
                                                .UpdateAction("UpdateRole")
                                                .DeleteAction("RemoveRole")
                                                .Key("PermissionId")

                                                )
                                                .RemoteOperations(true)
                                                .Columns(columns =>
                                                {



                                        columns.AddFor(m => m.Pfnumber).Caption("Email").Lookup(r => r
                                        .DataSource(ds => ds.Mvc().Controller("SetupAPI").LoadAction("GetListOfUsers").Key("PFNumber"))
                                        .ValueExpr("PFNumber")
                                        .DisplayExpr("Email"))
                                        .ValidationRules(r => r
                                        .AddRequired()
                                        .Message("Select User"));
                                        columns.AddFor(m => m.PermissionName).Lookup(r => r
                                        .DataSource(ds => ds.Mvc().Controller("SetupAPI").LoadAction("GetPermissionsNames").Key("PermissionName"))
                                        .ValueExpr("PermissionName")
                                        .DisplayExpr("PermissionName"))
                                .ValidationRules(r => r
                                .AddRequired()
                                .Message("Select Permission")); ;
                                                    columns.AddFor(m => m.CreatedDate).Visible(false);
                                        columns.AddFor(m => m.Status);
                                        columns.AddFor(m => m.CreatedBy);






                                                })

                                                                .SearchPanel(f => f.Visible(true))

                                                                .Paging(p => p.PageSize(10))
                                                                .HeaderFilter(f => f.Visible(true))

                                                                .Grouping(g => g.ContextMenuEnabled(true))
                                                                .Grouping(g => g.AutoExpandAll(true))
                                                                .RemoteOperations(true)
                                                                .Selection(s => s.Mode(SelectionMode.Multiple))
                                                                .Export(e => e.Enabled(true).FileName("ListofGroups").AllowExportSelectedData(true))
                                                                     .Editing(e => e
                                                                     .AllowAdding(true)
                                                                .Popup(p => p
                                                                .Title("Add New Permission")
                                                                .ShowTitle(true)
                                                                .Width(500)
                                                                .Height(300)



                                                                )

                                                                .AllowUpdating(true)
                                                                .AllowDeleting(true)
                                                                .Mode(GridEditMode.Popup)
                                                                .UseIcons(true)
                                                                .Form(f => f
                                                                .ID("UserPermission")
                                                                .ColCount(1)
                                                                .Items(items =>
                                                                {
                                                                    items.AddGroup()
                                                                    .Items(groupItems =>
                                                                    {
                                                                        groupItems.AddSimpleFor(m => m.Pfnumber);
                                                                        groupItems.AddSimpleFor(m => m.PermissionName);
                                            groupItems.AddSimpleFor(m => m.Status);
                                                                    });

                                                                })

                                                                )
                                                                )
                                    )

</div>
</div>
</div>


</div>
</div>
</div>
</div>
</div>




