@{
    Layout = "~/Views/Shared/_StaffMaster.cshtml";
    ViewData["Title"] = "Home Page";
}
<script type="text/javascript">
    //<![CDATA[
    function onInitNewRow(e, MeetingId) {

        e.data.MeetingId = MeetingId;

    }
            //]]>
</script>
<div class="page-header card">
    <div class="row align-items-end">
        <div class="col-lg-8">
            <div class="page-header-title">
                <i class="feather icon-users bg-c-blue"></i>
                <div class="d-inline">
                    <h5>Meetings from  @User.Identity.Name</h5>

                </div>
            </div>
        </div>

    </div>
</div>

<div class="pcoded-inner-content">
    <div class="main-body">
        <div class="page-wrapper">
            <div class="page-body">

                <div class="row">







                    <div class="col-xl-12 col-md-6">
                        <div class="card table-card">
                            <div class="card-header">
                                <h5>Created Meeting</h5>
                                <div class="card-header-right">
                                    <ul class="list-unstyled card-option">
                                        <li class="first-opt"><i class="feather icon-chevron-left open-card-option"></i></li>
                                        <li><i class="feather icon-maximize full-card"></i></li>
                                        <li><i class="feather icon-minus minimize-card"></i></li>
                                        <li><i class="feather icon-refresh-cw reload-card"></i></li>
                                        <li><i class="feather icon-trash close-card"></i></li>
                                        <li><i class="feather icon-chevron-left open-card-option"></i></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="card-block">

                                @(
                                        Html.DevExtreme().DataGrid<IntranetPortal.Models.Meeting>
                                        ()
                                        .DataSource(ds => ds.Mvc()
                                    .Controller("MeetingManagementAPI")
                                        .InsertAction("AddNewMeeting")
                                        .LoadAction("GetMeetings")
                                        .UpdateAction("UpdateMeeting")
                                        .DeleteAction("RemoveRole")
                                        .Key("MeetingId")


                                        )
                                        .RemoteOperations(true)
                                        .Columns(columns =>
                                        {



                                            columns.AddFor(m => m.Title);
                                            columns.AddFor(m => m.Location);

                                            columns.AddFor(m => m.StartDate).DataType(GridColumnDataType.DateTime);
                                            columns.AddFor(m => m.EndDate).DataType(GridColumnDataType.DateTime);
                                            columns.AddFor(m => m.Status).Lookup(r => r
                                        .DataSource(new string[] {
                                "Created",
                                "Started",
                                "Posponde",
                                "Re-scheduled",
                                "Closed"


                                        }
                                        )
                                        )
                                        .ValidationRules(r => r
                                        .AddRequired()
                                        .Message("Priority is required")
                                        );   
                                        columns.AddFor(m => m.Description).Caption("Description").CellTemplate(
                                        @<text>


                                            <a href="/MeetingManager/MeetingAttachments?MeetingCode=<%= data.MeetingCode%>"><div class="feather icon-paperclip  text-primary">Attachment</div></a>




                                        </text>);


                                            columns.AddFor(m => m.UpdatedBy).DataField("UpdatedBy").Caption("Comments").CellTemplate(@<text>

                                               
                                                <a href="/MeetingManager/MeetingAttachments?MeetingCode=<%= data.MeetingCode%>"><div class="feather icon-message-square  text-success"> Comments</div></a>




                                              
                                            </text>);



                                        
                                   



                                        })

                                    .SearchPanel(f => f.Visible(true))

                                    .Paging(p => p.PageSize(10))
                                    .HeaderFilter(f => f.Visible(true))

                                    .Grouping(g => g.ContextMenuEnabled(true))
                                    .Grouping(g => g.AutoExpandAll(true))
                                    .RemoteOperations(true)
                                    .Selection(s => s.Mode(SelectionMode.Multiple))
                                    .Export(e => e.Enabled(true).FileName("ListofActivities").AllowExportSelectedData(true))
                                    .Editing(e => e
                                    .AllowAdding(true)
                                    .Popup(p => p
                                    .Title("Add New Meeting")
                                    .ShowTitle(true)
                                    .Width(1000)
                                    .Height(400)



                                    )

                                    .AllowUpdating(true)
                                    .AllowDeleting(false)
                                    .Mode(GridEditMode.Popup)
                                    .UseIcons(true)
                                    .Form(f => f
                                    .ID("UserCreationD")
                                    .ColCount(1)
                                    .Items(items =>
                                    {
                                        items.AddGroup()
                                        .ColCount(3)
                                        .Items(groupItems =>
                                        {

                                            groupItems.AddSimpleFor(m => m.Title);
                                            groupItems.AddSimpleFor(m => m.Location);
                                            groupItems.AddSimpleFor(m => m.StartDate).Editor(e => e.DateBox());
                                            groupItems.AddSimpleFor(m => m.EndDate).Editor(e => e.DateBox()); ;
                                            groupItems.AddSimpleFor(m => m.Status);
                                           



                                        });
                                        items.AddGroup()
                                        .ColCount(1)
                                        .Items(groupItems =>
                                        {
                                            groupItems.AddSimpleFor(m => m.Description).Editor(e => e
                                        .HtmlEditor()
                                        .Height(190)
                                        .Toolbar(toolbar => toolbar.Items(
                                        items =>
                                        {
                                            items.Add().FormatName(HtmlEditorToolbarItem.Bold);
                                            items.Add().FormatName(HtmlEditorToolbarItem.Italic);
                                            items.Add().FormatName(HtmlEditorToolbarItem.Underline);
                                            items.Add().FormatName(HtmlEditorToolbarItem.BulletList);
                                            items.Add().FormatName(HtmlEditorToolbarItem.AlignJustify);
                                            items.Add().FormatName(HtmlEditorToolbarItem.IncreaseIndent);
                                        })
                                        ));






                                        });
                                    })

                                    )
                                    )
                                    .MasterDetail(m =>
                                    {
                                        m.Enabled(true);

                                        m.Template(@<text>
                                            @Html.Partial("_MeetingInvitee")
                                        </text>);



                                    })
                                    )

                                



                            </div>
                        </div>
                    </div>
                    <div class="col-xl-12 col-md-12">
                        <div class="card latest-update-card">
                            <div class="card-header">
                                <h5>Invitde Meeting</h5>
                                <div class="card-header-right">
                                    <ul class="list-unstyled card-option">
                                        <li class="first-opt"><i class="feather icon-chevron-left open-card-option"></i></li>
                                        <li><i class="feather icon-maximize full-card"></i></li>
                                        <li><i class="feather icon-minus minimize-card"></i></li>
                                        <li><i class="feather icon-refresh-cw reload-card"></i></li>
                                        <li><i class="feather icon-trash close-card"></i></li>
                                        <li><i class="feather icon-chevron-left open-card-option"></i></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="card-block">

                                @(
                                        Html.DevExtreme().DataGrid<IntranetPortal.Models.MeetingInvitation>
                                        ()
                                        .DataSource(ds => ds.Mvc()
                                        .Controller("MeetingManagementAPI")
                                        .InsertAction("AddNewMeeting")
                                        .LoadAction("GetOfficersInvitedMeetings")
                                        .UpdateAction("UpdateMeeting")
                                        .DeleteAction("RemoveRole")
                                        .Key("MeetingId")


                                        )
                                        .RemoteOperations(true)
                                        .Columns(columns =>
                                        {



                                            columns.AddFor(m => m.Meetings.Title);
                                            columns.AddFor(m => m.Meetings.Location);

                                            columns.AddFor(m => m.Meetings.StartDate).DataType(GridColumnDataType.DateTime);
                                            columns.AddFor(m => m.Meetings.EndDate).DataType(GridColumnDataType.DateTime);
                                            columns.AddFor(m => m.Meetings.Status).Lookup(r => r
                                        .DataSource(new string[] {
                                "Created",
                                "Started",
                                "Posponde",
                                "Re-scheduled",
                                "Closed"


                                        }
                                        )
                                        )
                                        .ValidationRules(r => r
                                        .AddRequired()
                                        .Message("Priority is required")
                                        );
                                            columns.AddFor(m => m.Meetings.Description).Caption("Description").CellTemplate(
                                        @<text>


                                            <a href="/MeetingManager/MeetingAttachments?MeetingCode=<%= data.MeetingCode%>"><div class="feather icon-paperclip  text-primary">Attachment</div></a>




                                        </text>);


                                            columns.AddFor(m => m.Meetings.UpdatedBy).DataField("UpdatedBy").Caption("Comments").CellTemplate(@<text>
                                                <a href="/MeetingManager/MeetingAttachments?MeetingCode=<%= data.MeetingCode%>"><div class="feather icon-message-square  text-success"> Comments</div></a>
                                            </text>);








                                        })

                                    .SearchPanel(f => f.Visible(true))

                                    .Paging(p => p.PageSize(10))
                                    .HeaderFilter(f => f.Visible(true))

                                    .Grouping(g => g.ContextMenuEnabled(true))
                                    .Grouping(g => g.AutoExpandAll(true))
                                    .RemoteOperations(true)
                                    .Selection(s => s.Mode(SelectionMode.Multiple))
                                    .Export(e => e.Enabled(true).FileName("ListofActivities").AllowExportSelectedData(true))
                                    .Editing(e => e
                                    .AllowAdding(true)
                                    .Popup(p => p
                                    .Title("Add New Meeting")
                                    .ShowTitle(true)
                                    .Width(1000)
                                    .Height(400)



                                    )

                                    .AllowUpdating(true)
                                    .AllowDeleting(false)
                                    .Mode(GridEditMode.Popup)
                                    .UseIcons(true)
                                    .Form(f => f
                                    .ID("UserCreationD")
                                    .ColCount(1)
                                    .Items(items =>
                                    {
                                        items.AddGroup()
                                        .ColCount(3)
                                        .Items(groupItems =>
                                        {

                                            groupItems.AddSimpleFor(m => m.Meetings.Title);
                                            groupItems.AddSimpleFor(m => m.Meetings.Location);
                                            groupItems.AddSimpleFor(m => m.Meetings.StartDate).Editor(e => e.DateBox());
                                            groupItems.AddSimpleFor(m => m.Meetings.EndDate).Editor(e => e.DateBox()); ;
                                            groupItems.AddSimpleFor(m => m.Meetings.Status);




                                        });
                                        items.AddGroup()
                                        .ColCount(1)
                                        .Items(groupItems =>
                                        {
                                            groupItems.AddSimpleFor(m => m.Meetings.Description).Editor(e => e
                                        .HtmlEditor()
                                        .Height(190)
                                        .Toolbar(toolbar => toolbar.Items(
                                        items =>
                                        {
                                            items.Add().FormatName(HtmlEditorToolbarItem.Bold);
                                            items.Add().FormatName(HtmlEditorToolbarItem.Italic);
                                            items.Add().FormatName(HtmlEditorToolbarItem.Underline);
                                            items.Add().FormatName(HtmlEditorToolbarItem.BulletList);
                                            items.Add().FormatName(HtmlEditorToolbarItem.AlignJustify);
                                            items.Add().FormatName(HtmlEditorToolbarItem.IncreaseIndent);
                                        })
                                        ));






                                        });
                                    })

                                    )
                                    )
                                    .MasterDetail(m =>
                                    {
                                        m.Enabled(true);

                                        m.Template(@<text>
                                            @Html.Partial("_MeetingInvitee")
                                        </text>);



                                    })
                                    )




                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>



